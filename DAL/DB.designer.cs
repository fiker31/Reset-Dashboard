#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MerchantDashboard")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertEntRole(EntRole instance);
    partial void UpdateEntRole(EntRole instance);
    partial void DeleteEntRole(EntRole instance);
    partial void InsertEntRoleCapability(EntRoleCapability instance);
    partial void UpdateEntRoleCapability(EntRoleCapability instance);
    partial void DeleteEntRoleCapability(EntRoleCapability instance);
    partial void InsertEntRoleUserAccount(EntRoleUserAccount instance);
    partial void UpdateEntRoleUserAccount(EntRoleUserAccount instance);
    partial void DeleteEntRoleUserAccount(EntRoleUserAccount instance);
    partial void InsertLogInOut(LogInOut instance);
    partial void UpdateLogInOut(LogInOut instance);
    partial void DeleteLogInOut(LogInOut instance);
    partial void InsertMerchantAppSalersList(MerchantAppSalersList instance);
    partial void UpdateMerchantAppSalersList(MerchantAppSalersList instance);
    partial void DeleteMerchantAppSalersList(MerchantAppSalersList instance);
    partial void InsertMerchantAppTXN(MerchantAppTXN instance);
    partial void UpdateMerchantAppTXN(MerchantAppTXN instance);
    partial void DeleteMerchantAppTXN(MerchantAppTXN instance);
    partial void InsertMerchantAppSimulation(MerchantAppSimulation instance);
    partial void UpdateMerchantAppSimulation(MerchantAppSimulation instance);
    partial void DeleteMerchantAppSimulation(MerchantAppSimulation instance);
    partial void InsertEntUserAccount(EntUserAccount instance);
    partial void UpdateEntUserAccount(EntUserAccount instance);
    partial void DeleteEntUserAccount(EntUserAccount instance);
    partial void InsertCustomerRegistration(CustomerRegistration instance);
    partial void UpdateCustomerRegistration(CustomerRegistration instance);
    partial void DeleteCustomerRegistration(CustomerRegistration instance);

		internal int UpdatePrimaryKey(string sourceEntity, string oldValue, string newValue)
		{
			throw new NotImplementedException();
		}
		#endregion

		public DBDataContext() : 
				base(global::DAL.Properties.Settings.Default.MerchantDashboardConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AuditColumn> AuditColumns
		{
			get
			{
				return this.GetTable<AuditColumn>();
			}
		}
		
		public System.Data.Linq.Table<SysSecurityParm> SysSecurityParms
		{
			get
			{
				return this.GetTable<SysSecurityParm>();
			}
		}
		
		public System.Data.Linq.Table<AuditLog> AuditLogs
		{
			get
			{
				return this.GetTable<AuditLog>();
			}
		}
		
		public System.Data.Linq.Table<AuditLogDetail> AuditLogDetails
		{
			get
			{
				return this.GetTable<AuditLogDetail>();
			}
		}
		
		public System.Data.Linq.Table<AuditTable> AuditTables
		{
			get
			{
				return this.GetTable<AuditTable>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<BusPeriod> BusPeriods
		{
			get
			{
				return this.GetTable<BusPeriod>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<EntCapability> EntCapabilities
		{
			get
			{
				return this.GetTable<EntCapability>();
			}
		}
		
		public System.Data.Linq.Table<EntMenuItem> EntMenuItems
		{
			get
			{
				return this.GetTable<EntMenuItem>();
			}
		}
		
		public System.Data.Linq.Table<EntPasswordHistory> EntPasswordHistories
		{
			get
			{
				return this.GetTable<EntPasswordHistory>();
			}
		}
		
		public System.Data.Linq.Table<EntRole> EntRoles
		{
			get
			{
				return this.GetTable<EntRole>();
			}
		}
		
		public System.Data.Linq.Table<EntRoleCapability> EntRoleCapabilities
		{
			get
			{
				return this.GetTable<EntRoleCapability>();
			}
		}
		
		public System.Data.Linq.Table<EntRoleUserAccount> EntRoleUserAccounts
		{
			get
			{
				return this.GetTable<EntRoleUserAccount>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<LogInOut> LogInOuts
		{
			get
			{
				return this.GetTable<LogInOut>();
			}
		}
		
		public System.Data.Linq.Table<MerchantAppSalersList> MerchantAppSalersLists
		{
			get
			{
				return this.GetTable<MerchantAppSalersList>();
			}
		}
		
		public System.Data.Linq.Table<MerchantAppTXN> MerchantAppTXNs
		{
			get
			{
				return this.GetTable<MerchantAppTXN>();
			}
		}
		
		public System.Data.Linq.Table<SysPar> SysPars
		{
			get
			{
				return this.GetTable<SysPar>();
			}
		}
		
		public System.Data.Linq.Table<MerchantAppSimulation> MerchantAppSimulations
		{
			get
			{
				return this.GetTable<MerchantAppSimulation>();
			}
		}
		
		public System.Data.Linq.Table<EntUserAccount> EntUserAccounts
		{
			get
			{
				return this.GetTable<EntUserAccount>();
			}
		}
		
		public System.Data.Linq.Table<CustomerRegistration> CustomerRegistrations
		{
			get
			{
				return this.GetTable<CustomerRegistration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditColumns")]
	public partial class AuditColumn
	{
		
		private long _ColumnID;
		
		private long _TableID;
		
		private string _ColumnName;
		
		public AuditColumn()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="BigInt NOT NULL")]
		public long ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this._ColumnID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="BigInt NOT NULL")]
		public long TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this._TableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this._ColumnName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysSecurityParm")]
	public partial class SysSecurityParm
	{
		
		private byte _LoginIdMinLength;
		
		private byte _PasswordMinLength;
		
		private bool _PasswordMustHaveDigit;
		
		private bool _PasswordMustHaveLowerCase;
		
		private bool _PasswordMustHaveUpperCase;
		
		private bool _PasswordMustHaveSpecialChar;
		
		private byte _AllowedUnsuccessfulAttempts;
		
		private byte _PasswordInterval;
		
		private byte _PasswordHistory;
		
		private string _UpdateUser;
		
		private System.DateTime _UpdateDate;
		
		public SysSecurityParm()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginIdMinLength", DbType="TinyInt NOT NULL")]
		public byte LoginIdMinLength
		{
			get
			{
				return this._LoginIdMinLength;
			}
			set
			{
				if ((this._LoginIdMinLength != value))
				{
					this._LoginIdMinLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMinLength", DbType="TinyInt NOT NULL")]
		public byte PasswordMinLength
		{
			get
			{
				return this._PasswordMinLength;
			}
			set
			{
				if ((this._PasswordMinLength != value))
				{
					this._PasswordMinLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveDigit", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveDigit
		{
			get
			{
				return this._PasswordMustHaveDigit;
			}
			set
			{
				if ((this._PasswordMustHaveDigit != value))
				{
					this._PasswordMustHaveDigit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveLowerCase", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveLowerCase
		{
			get
			{
				return this._PasswordMustHaveLowerCase;
			}
			set
			{
				if ((this._PasswordMustHaveLowerCase != value))
				{
					this._PasswordMustHaveLowerCase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveUpperCase", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveUpperCase
		{
			get
			{
				return this._PasswordMustHaveUpperCase;
			}
			set
			{
				if ((this._PasswordMustHaveUpperCase != value))
				{
					this._PasswordMustHaveUpperCase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveSpecialChar", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveSpecialChar
		{
			get
			{
				return this._PasswordMustHaveSpecialChar;
			}
			set
			{
				if ((this._PasswordMustHaveSpecialChar != value))
				{
					this._PasswordMustHaveSpecialChar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedUnsuccessfulAttempts", DbType="TinyInt NOT NULL")]
		public byte AllowedUnsuccessfulAttempts
		{
			get
			{
				return this._AllowedUnsuccessfulAttempts;
			}
			set
			{
				if ((this._AllowedUnsuccessfulAttempts != value))
				{
					this._AllowedUnsuccessfulAttempts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordInterval", DbType="TinyInt NOT NULL")]
		public byte PasswordInterval
		{
			get
			{
				return this._PasswordInterval;
			}
			set
			{
				if ((this._PasswordInterval != value))
				{
					this._PasswordInterval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHistory", DbType="TinyInt NOT NULL")]
		public byte PasswordHistory
		{
			get
			{
				return this._PasswordHistory;
			}
			set
			{
				if ((this._PasswordHistory != value))
				{
					this._PasswordHistory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this._UpdateUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditLog")]
	public partial class AuditLog
	{
		
		private long _AuditLogID;
		
		private long _TableID;
		
		private bool _RowsAffected;
		
		private char _Event;
		
		private System.DateTime _EventDateTime;
		
		private string _UserName;
		
		public AuditLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLogID", DbType="BigInt NOT NULL")]
		public long AuditLogID
		{
			get
			{
				return this._AuditLogID;
			}
			set
			{
				if ((this._AuditLogID != value))
				{
					this._AuditLogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="BigInt NOT NULL")]
		public long TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this._TableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowsAffected", DbType="Bit NOT NULL")]
		public bool RowsAffected
		{
			get
			{
				return this._RowsAffected;
			}
			set
			{
				if ((this._RowsAffected != value))
				{
					this._RowsAffected = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="Char(1) NOT NULL")]
		public char Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this._Event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventDateTime
		{
			get
			{
				return this._EventDateTime;
			}
			set
			{
				if ((this._EventDateTime != value))
				{
					this._EventDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditLogDetail")]
	public partial class AuditLogDetail
	{
		
		private long _AuditLogDetailID;
		
		private long _AuditLogID;
		
		private string _RowKey;
		
		private long _ColumnID;
		
		private string _OldValue;
		
		private string _NewValue;
		
		public AuditLogDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLogDetailID", DbType="BigInt NOT NULL")]
		public long AuditLogDetailID
		{
			get
			{
				return this._AuditLogDetailID;
			}
			set
			{
				if ((this._AuditLogDetailID != value))
				{
					this._AuditLogDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLogID", DbType="BigInt NOT NULL")]
		public long AuditLogID
		{
			get
			{
				return this._AuditLogID;
			}
			set
			{
				if ((this._AuditLogID != value))
				{
					this._AuditLogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowKey", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string RowKey
		{
			get
			{
				return this._RowKey;
			}
			set
			{
				if ((this._RowKey != value))
				{
					this._RowKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="BigInt NOT NULL")]
		public long ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this._ColumnID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="VarChar(4000)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this._OldValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="VarChar(4000)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this._NewValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditTables")]
	public partial class AuditTable
	{
		
		private long _TableID;
		
		private string _TableName;
		
		private string _Description;
		
		private string _PKeyField;
		
		private bool _AuditInserts;
		
		private bool _AuditUpdates;
		
		private bool _AuditDeletes;
		
		private string _UserColumn;
		
		public AuditTable()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="BigInt NOT NULL")]
		public long TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this._TableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKeyField", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PKeyField
		{
			get
			{
				return this._PKeyField;
			}
			set
			{
				if ((this._PKeyField != value))
				{
					this._PKeyField = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditInserts", DbType="Bit NOT NULL")]
		public bool AuditInserts
		{
			get
			{
				return this._AuditInserts;
			}
			set
			{
				if ((this._AuditInserts != value))
				{
					this._AuditInserts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditUpdates", DbType="Bit NOT NULL")]
		public bool AuditUpdates
		{
			get
			{
				return this._AuditUpdates;
			}
			set
			{
				if ((this._AuditUpdates != value))
				{
					this._AuditUpdates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDeletes", DbType="Bit NOT NULL")]
		public bool AuditDeletes
		{
			get
			{
				return this._AuditDeletes;
			}
			set
			{
				if ((this._AuditDeletes != value))
				{
					this._AuditDeletes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserColumn", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserColumn
		{
			get
			{
				return this._UserColumn;
			}
			set
			{
				if ((this._UserColumn != value))
				{
					this._UserColumn = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<long> _DistrictID;
		
		private string _T24Code;
		
		private string _Address;
		
		private string _Contact;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDistrictIDChanging(System.Nullable<long> value);
    partial void OnDistrictIDChanged();
    partial void OnT24CodeChanging(string value);
    partial void OnT24CodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T24Code", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string T24Code
		{
			get
			{
				return this._T24Code;
			}
			set
			{
				if ((this._T24Code != value))
				{
					this.OnT24CodeChanging(value);
					this.SendPropertyChanging();
					this._T24Code = value;
					this.SendPropertyChanged("T24Code");
					this.OnT24CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusPeriod")]
	public partial class BusPeriod
	{
		
		private long _RowId;
		
		private string _BusinessPeriod;
		
		private byte _PStatus;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
		public BusPeriod()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RowId
		{
			get
			{
				return this._RowId;
			}
			set
			{
				if ((this._RowId != value))
				{
					this._RowId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPeriod", DbType="Char(9) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BusinessPeriod
		{
			get
			{
				return this._BusinessPeriod;
			}
			set
			{
				if ((this._BusinessPeriod != value))
				{
					this._BusinessPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PStatus", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte PStatus
		{
			get
			{
				return this._PStatus;
			}
			set
			{
				if ((this._PStatus != value))
				{
					this._PStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this._InsertUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this._UpdateUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.District")]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Contact;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public District()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntCapability")]
	public partial class EntCapability
	{
		
		private long _CapabilityId;
		
		private string _CapabilityName;
		
		private long _MenuItemId;
		
		private byte _AccessType;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
		public EntCapability()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long CapabilityId
		{
			get
			{
				return this._CapabilityId;
			}
			set
			{
				if ((this._CapabilityId != value))
				{
					this._CapabilityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CapabilityName
		{
			get
			{
				return this._CapabilityName;
			}
			set
			{
				if ((this._CapabilityName != value))
				{
					this._CapabilityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long MenuItemId
		{
			get
			{
				return this._MenuItemId;
			}
			set
			{
				if ((this._MenuItemId != value))
				{
					this._MenuItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this._AccessType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this._InsertUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this._UpdateUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntMenuItem")]
	public partial class EntMenuItem
	{
		
		private long _MenuItemId;
		
		private string _MenuItemName;
		
		private string _Description;
		
		private string _URL;
		
		private System.Nullable<long> _ParentMenuItemId;
		
		private byte _DisplaySequence;
		
		private bool _IsAlwaysEnabled;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
		public EntMenuItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long MenuItemId
		{
			get
			{
				return this._MenuItemId;
			}
			set
			{
				if ((this._MenuItemId != value))
				{
					this._MenuItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MenuItemName
		{
			get
			{
				return this._MenuItemName;
			}
			set
			{
				if ((this._MenuItemName != value))
				{
					this._MenuItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuItemId", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> ParentMenuItemId
		{
			get
			{
				return this._ParentMenuItemId;
			}
			set
			{
				if ((this._ParentMenuItemId != value))
				{
					this._ParentMenuItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplaySequence", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte DisplaySequence
		{
			get
			{
				return this._DisplaySequence;
			}
			set
			{
				if ((this._DisplaySequence != value))
				{
					this._DisplaySequence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlwaysEnabled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAlwaysEnabled
		{
			get
			{
				return this._IsAlwaysEnabled;
			}
			set
			{
				if ((this._IsAlwaysEnabled != value))
				{
					this._IsAlwaysEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this._InsertUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this._UpdateUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntPasswordHistory")]
	public partial class EntPasswordHistory
	{
		
		private long _Id;
		
		private string _UserAccountName;
		
		private string _Password;
		
		private string _AppName;
		
		private string _InsertUser;
		
		private System.DateTime _InsertDate;
		
		private System.Data.Linq.Binary _Version;
		
		public EntPasswordHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UserAccountName
		{
			get
			{
				return this._UserAccountName;
			}
			set
			{
				if ((this._UserAccountName != value))
				{
					this._UserAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					this._AppName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this._InsertUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Binary(8) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntRole")]
	public partial class EntRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleId;
		
		private string _RoleName;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntRoleCapability")]
	public partial class EntRoleCapability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleCapabilityId;
		
		private long _RoleId;
		
		private long _CapabilityId;
		
		private byte _AccessFlag;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleCapabilityIdChanging(long value);
    partial void OnRoleCapabilityIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnCapabilityIdChanging(long value);
    partial void OnCapabilityIdChanged();
    partial void OnAccessFlagChanging(byte value);
    partial void OnAccessFlagChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntRoleCapability()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCapabilityId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long RoleCapabilityId
		{
			get
			{
				return this._RoleCapabilityId;
			}
			set
			{
				if ((this._RoleCapabilityId != value))
				{
					this.OnRoleCapabilityIdChanging(value);
					this.SendPropertyChanging();
					this._RoleCapabilityId = value;
					this.SendPropertyChanged("RoleCapabilityId");
					this.OnRoleCapabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long CapabilityId
		{
			get
			{
				return this._CapabilityId;
			}
			set
			{
				if ((this._CapabilityId != value))
				{
					this.OnCapabilityIdChanging(value);
					this.SendPropertyChanging();
					this._CapabilityId = value;
					this.SendPropertyChanged("CapabilityId");
					this.OnCapabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFlag", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte AccessFlag
		{
			get
			{
				return this._AccessFlag;
			}
			set
			{
				if ((this._AccessFlag != value))
				{
					this.OnAccessFlagChanging(value);
					this.SendPropertyChanging();
					this._AccessFlag = value;
					this.SendPropertyChanged("AccessFlag");
					this.OnAccessFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntRoleUserAccount")]
	public partial class EntRoleUserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleUserAccountId;
		
		private long _RoleId;
		
		private long _UserAccountId;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleUserAccountIdChanging(long value);
    partial void OnRoleUserAccountIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnUserAccountIdChanging(long value);
    partial void OnUserAccountIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntRoleUserAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleUserAccountId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long RoleUserAccountId
		{
			get
			{
				return this._RoleUserAccountId;
			}
			set
			{
				if ((this._RoleUserAccountId != value))
				{
					this.OnRoleUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._RoleUserAccountId = value;
					this.SendPropertyChanged("RoleUserAccountId");
					this.OnRoleUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long UserAccountId
		{
			get
			{
				return this._UserAccountId;
			}
			set
			{
				if ((this._UserAccountId != value))
				{
					this.OnUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccountId = value;
					this.SendPropertyChanged("UserAccountId");
					this.OnUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holiday")]
	public partial class Holiday
	{
		
		private long _Id;
		
		private string _HolidayName;
		
		private System.DateTime _HolidayDate;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
		public Holiday()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HolidayName
		{
			get
			{
				return this._HolidayName;
			}
			set
			{
				if ((this._HolidayName != value))
				{
					this._HolidayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this._HolidayDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this._InsertUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this._UpdateUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogInOut")]
	public partial class LogInOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _UserID;
		
		private System.DateTime _LogInDT;
		
		private System.DateTime _LogOutDT;
		
		private char _Status;
		
		private string _UserHost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnLogInDTChanging(System.DateTime value);
    partial void OnLogInDTChanged();
    partial void OnLogOutDTChanging(System.DateTime value);
    partial void OnLogOutDTChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnUserHostChanging(string value);
    partial void OnUserHostChanged();
    #endregion
		
		public LogInOut()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogInDT", DbType="DateTime NOT NULL")]
		public System.DateTime LogInDT
		{
			get
			{
				return this._LogInDT;
			}
			set
			{
				if ((this._LogInDT != value))
				{
					this.OnLogInDTChanging(value);
					this.SendPropertyChanging();
					this._LogInDT = value;
					this.SendPropertyChanged("LogInDT");
					this.OnLogInDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogOutDT", DbType="DateTime NOT NULL")]
		public System.DateTime LogOutDT
		{
			get
			{
				return this._LogOutDT;
			}
			set
			{
				if ((this._LogOutDT != value))
				{
					this.OnLogOutDTChanging(value);
					this.SendPropertyChanging();
					this._LogOutDT = value;
					this.SendPropertyChanged("LogOutDT");
					this.OnLogOutDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHost", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserHost
		{
			get
			{
				return this._UserHost;
			}
			set
			{
				if ((this._UserHost != value))
				{
					this.OnUserHostChanging(value);
					this.SendPropertyChanging();
					this._UserHost = value;
					this.SendPropertyChanged("UserHost");
					this.OnUserHostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MerchantAppSalersList")]
	public partial class MerchantAppSalersList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _SalersPhone;
		
		private string _EncryptionKey;
		
		private string _Shortcode;
		
		private string _Status;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnSalersPhoneChanging(string value);
    partial void OnSalersPhoneChanged();
    partial void OnEncryptionKeyChanging(string value);
    partial void OnEncryptionKeyChanged();
    partial void OnShortcodeChanging(string value);
    partial void OnShortcodeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public MerchantAppSalersList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalersPhone", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SalersPhone
		{
			get
			{
				return this._SalersPhone;
			}
			set
			{
				if ((this._SalersPhone != value))
				{
					this.OnSalersPhoneChanging(value);
					this.SendPropertyChanging();
					this._SalersPhone = value;
					this.SendPropertyChanged("SalersPhone");
					this.OnSalersPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncryptionKey", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EncryptionKey
		{
			get
			{
				return this._EncryptionKey;
			}
			set
			{
				if ((this._EncryptionKey != value))
				{
					this.OnEncryptionKeyChanging(value);
					this.SendPropertyChanging();
					this._EncryptionKey = value;
					this.SendPropertyChanged("EncryptionKey");
					this.OnEncryptionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortcode", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Shortcode
		{
			get
			{
				return this._Shortcode;
			}
			set
			{
				if ((this._Shortcode != value))
				{
					this.OnShortcodeChanging(value);
					this.SendPropertyChanging();
					this._Shortcode = value;
					this.SendPropertyChanged("Shortcode");
					this.OnShortcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MerchantAppTXN")]
	public partial class MerchantAppTXN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Shortcode;
		
		private string _Phone;
		
		private decimal _Amount;
		
		private string _TransactionId;
		
		private string _Status;
		
		private string _SalersPhone;
		
		private System.DateTime _TransactionEndDate;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnShortcodeChanging(string value);
    partial void OnShortcodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTransactionIdChanging(string value);
    partial void OnTransactionIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnSalersPhoneChanging(string value);
    partial void OnSalersPhoneChanged();
    partial void OnTransactionEndDateChanging(System.DateTime value);
    partial void OnTransactionEndDateChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public MerchantAppTXN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortcode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Shortcode
		{
			get
			{
				return this._Shortcode;
			}
			set
			{
				if ((this._Shortcode != value))
				{
					this.OnShortcodeChanging(value);
					this.SendPropertyChanging();
					this._Shortcode = value;
					this.SendPropertyChanged("Shortcode");
					this.OnShortcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(15,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalersPhone", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SalersPhone
		{
			get
			{
				return this._SalersPhone;
			}
			set
			{
				if ((this._SalersPhone != value))
				{
					this.OnSalersPhoneChanging(value);
					this.SendPropertyChanging();
					this._SalersPhone = value;
					this.SendPropertyChanged("SalersPhone");
					this.OnSalersPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionEndDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime TransactionEndDate
		{
			get
			{
				return this._TransactionEndDate;
			}
			set
			{
				if ((this._TransactionEndDate != value))
				{
					this.OnTransactionEndDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionEndDate = value;
					this.SendPropertyChanged("TransactionEndDate");
					this.OnTransactionEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysPar")]
	public partial class SysPar
	{
		
		private byte _GLCodeLen;
		
		private byte _SLCodeLen;
		
		private byte _MinPWDLen;
		
		private byte _MinLoginIdLen;
		
		private decimal _TotalCapital;
		
		public SysPar()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GLCodeLen", DbType="TinyInt NOT NULL")]
		public byte GLCodeLen
		{
			get
			{
				return this._GLCodeLen;
			}
			set
			{
				if ((this._GLCodeLen != value))
				{
					this._GLCodeLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLCodeLen", DbType="TinyInt NOT NULL")]
		public byte SLCodeLen
		{
			get
			{
				return this._SLCodeLen;
			}
			set
			{
				if ((this._SLCodeLen != value))
				{
					this._SLCodeLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPWDLen", DbType="TinyInt NOT NULL")]
		public byte MinPWDLen
		{
			get
			{
				return this._MinPWDLen;
			}
			set
			{
				if ((this._MinPWDLen != value))
				{
					this._MinPWDLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinLoginIdLen", DbType="TinyInt NOT NULL")]
		public byte MinLoginIdLen
		{
			get
			{
				return this._MinLoginIdLen;
			}
			set
			{
				if ((this._MinLoginIdLen != value))
				{
					this._MinLoginIdLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCapital", DbType="Money NOT NULL")]
		public decimal TotalCapital
		{
			get
			{
				return this._TotalCapital;
			}
			set
			{
				if ((this._TotalCapital != value))
				{
					this._TotalCapital = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MerchantAppSimulation")]
	public partial class MerchantAppSimulation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Phone;
		
		private string _MerchantShortCode;
		
		private string _MerchantName;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMerchantShortCodeChanging(string value);
    partial void OnMerchantShortCodeChanged();
    partial void OnMerchantNameChanging(string value);
    partial void OnMerchantNameChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public MerchantAppSimulation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantShortCode", DbType="NVarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MerchantShortCode
		{
			get
			{
				return this._MerchantShortCode;
			}
			set
			{
				if ((this._MerchantShortCode != value))
				{
					this.OnMerchantShortCodeChanging(value);
					this.SendPropertyChanging();
					this._MerchantShortCode = value;
					this.SendPropertyChanged("MerchantShortCode");
					this.OnMerchantShortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MerchantName
		{
			get
			{
				return this._MerchantName;
			}
			set
			{
				if ((this._MerchantName != value))
				{
					this.OnMerchantNameChanging(value);
					this.SendPropertyChanging();
					this._MerchantName = value;
					this.SendPropertyChanged("MerchantName");
					this.OnMerchantNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntUserAccount")]
	public partial class EntUserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserAccountId;
		
		private string _UserAccountName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _Shortcode;
		
		private bool _Status;
		
		private string _UserPassword;
		
		private System.DateTime _PWDChangeDate;
		
		private System.Nullable<bool> _IsNewPassword;
		
		private bool _IsLocked;
		
		private byte _PAsswordAttemptNo;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAccountIdChanging(long value);
    partial void OnUserAccountIdChanged();
    partial void OnUserAccountNameChanging(string value);
    partial void OnUserAccountNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnShortcodeChanging(string value);
    partial void OnShortcodeChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnPWDChangeDateChanging(System.DateTime value);
    partial void OnPWDChangeDateChanged();
    partial void OnIsNewPasswordChanging(System.Nullable<bool> value);
    partial void OnIsNewPasswordChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnPAsswordAttemptNoChanging(byte value);
    partial void OnPAsswordAttemptNoChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntUserAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long UserAccountId
		{
			get
			{
				return this._UserAccountId;
			}
			set
			{
				if ((this._UserAccountId != value))
				{
					this.OnUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccountId = value;
					this.SendPropertyChanged("UserAccountId");
					this.OnUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UserAccountName
		{
			get
			{
				return this._UserAccountName;
			}
			set
			{
				if ((this._UserAccountName != value))
				{
					this.OnUserAccountNameChanging(value);
					this.SendPropertyChanging();
					this._UserAccountName = value;
					this.SendPropertyChanged("UserAccountName");
					this.OnUserAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortcode", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Shortcode
		{
			get
			{
				return this._Shortcode;
			}
			set
			{
				if ((this._Shortcode != value))
				{
					this.OnShortcodeChanging(value);
					this.SendPropertyChanging();
					this._Shortcode = value;
					this.SendPropertyChanged("Shortcode");
					this.OnShortcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWDChangeDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime PWDChangeDate
		{
			get
			{
				return this._PWDChangeDate;
			}
			set
			{
				if ((this._PWDChangeDate != value))
				{
					this.OnPWDChangeDateChanging(value);
					this.SendPropertyChanging();
					this._PWDChangeDate = value;
					this.SendPropertyChanged("PWDChangeDate");
					this.OnPWDChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewPassword", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> IsNewPassword
		{
			get
			{
				return this._IsNewPassword;
			}
			set
			{
				if ((this._IsNewPassword != value))
				{
					this.OnIsNewPasswordChanging(value);
					this.SendPropertyChanging();
					this._IsNewPassword = value;
					this.SendPropertyChanged("IsNewPassword");
					this.OnIsNewPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAsswordAttemptNo", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte PAsswordAttemptNo
		{
			get
			{
				return this._PAsswordAttemptNo;
			}
			set
			{
				if ((this._PAsswordAttemptNo != value))
				{
					this.OnPAsswordAttemptNoChanging(value);
					this.SendPropertyChanging();
					this._PAsswordAttemptNo = value;
					this.SendPropertyChanged("PAsswordAttemptNo");
					this.OnPAsswordAttemptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerRegistration")]
	public partial class CustomerRegistration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CustomerRegistrationID;
		
		private string _PhoneNumber;
		
		private string _FullName;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private string _DeviceID;
		
		private string _OTP;
		
		private System.Nullable<System.DateTime> _OTPGenratedDate;
		
		private System.Nullable<System.DateTime> _OTPExpireDate;
		
		private System.Nullable<System.DateTime> _OTPConfimationDate;
		
		private string _Status;
		
		private string _Password;
		
		private string _AppKey;
		
		private System.Nullable<System.DateTime> _AppKeyExpireDate;
		
		private System.Nullable<System.Guid> _AppVersionID;
		
		private System.Nullable<decimal> _Balance;
		
		private System.DateTime _InsertDate;
		
		private System.DateTime _UpdateDate;
		
		private string _InsertUser;
		
		private string _UpdateUser;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerRegistrationIDChanging(System.Guid value);
    partial void OnCustomerRegistrationIDChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnDeviceIDChanging(string value);
    partial void OnDeviceIDChanged();
    partial void OnOTPChanging(string value);
    partial void OnOTPChanged();
    partial void OnOTPGenratedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOTPGenratedDateChanged();
    partial void OnOTPExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOTPExpireDateChanged();
    partial void OnOTPConfimationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOTPConfimationDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAppKeyChanging(string value);
    partial void OnAppKeyChanged();
    partial void OnAppKeyExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppKeyExpireDateChanged();
    partial void OnAppVersionIDChanging(System.Nullable<System.Guid> value);
    partial void OnAppVersionIDChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnInsertUserChanging(string value);
    partial void OnInsertUserChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public CustomerRegistration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerRegistrationID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid CustomerRegistrationID
		{
			get
			{
				return this._CustomerRegistrationID;
			}
			set
			{
				if ((this._CustomerRegistrationID != value))
				{
					this.OnCustomerRegistrationIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerRegistrationID = value;
					this.SendPropertyChanged("CustomerRegistrationID");
					this.OnCustomerRegistrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTP", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string OTP
		{
			get
			{
				return this._OTP;
			}
			set
			{
				if ((this._OTP != value))
				{
					this.OnOTPChanging(value);
					this.SendPropertyChanging();
					this._OTP = value;
					this.SendPropertyChanged("OTP");
					this.OnOTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPGenratedDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> OTPGenratedDate
		{
			get
			{
				return this._OTPGenratedDate;
			}
			set
			{
				if ((this._OTPGenratedDate != value))
				{
					this.OnOTPGenratedDateChanging(value);
					this.SendPropertyChanging();
					this._OTPGenratedDate = value;
					this.SendPropertyChanged("OTPGenratedDate");
					this.OnOTPGenratedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPExpireDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> OTPExpireDate
		{
			get
			{
				return this._OTPExpireDate;
			}
			set
			{
				if ((this._OTPExpireDate != value))
				{
					this.OnOTPExpireDateChanging(value);
					this.SendPropertyChanging();
					this._OTPExpireDate = value;
					this.SendPropertyChanged("OTPExpireDate");
					this.OnOTPExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPConfimationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> OTPConfimationDate
		{
			get
			{
				return this._OTPConfimationDate;
			}
			set
			{
				if ((this._OTPConfimationDate != value))
				{
					this.OnOTPConfimationDateChanging(value);
					this.SendPropertyChanging();
					this._OTPConfimationDate = value;
					this.SendPropertyChanged("OTPConfimationDate");
					this.OnOTPConfimationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKey", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string AppKey
		{
			get
			{
				return this._AppKey;
			}
			set
			{
				if ((this._AppKey != value))
				{
					this.OnAppKeyChanging(value);
					this.SendPropertyChanging();
					this._AppKey = value;
					this.SendPropertyChanged("AppKey");
					this.OnAppKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppKeyExpireDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AppKeyExpireDate
		{
			get
			{
				return this._AppKeyExpireDate;
			}
			set
			{
				if ((this._AppKeyExpireDate != value))
				{
					this.OnAppKeyExpireDateChanging(value);
					this.SendPropertyChanging();
					this._AppKeyExpireDate = value;
					this.SendPropertyChanged("AppKeyExpireDate");
					this.OnAppKeyExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppVersionID", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> AppVersionID
		{
			get
			{
				return this._AppVersionID;
			}
			set
			{
				if ((this._AppVersionID != value))
				{
					this.OnAppVersionIDChanging(value);
					this.SendPropertyChanging();
					this._AppVersionID = value;
					this.SendPropertyChanged("AppVersionID");
					this.OnAppVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUser
		{
			get
			{
				return this._InsertUser;
			}
			set
			{
				if ((this._InsertUser != value))
				{
					this.OnInsertUserChanging(value);
					this.SendPropertyChanging();
					this._InsertUser = value;
					this.SendPropertyChanged("InsertUser");
					this.OnInsertUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
